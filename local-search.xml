<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CPU性能分析与优化</title>
    <link href="/2024/05/06/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/CPU%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96/"/>
    <url>/2024/05/06/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/CPU%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E4%B8%8E%E4%BC%98%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="现代CPU性能分析"><a href="#现代CPU性能分析" class="headerlink" title="现代CPU性能分析"></a>现代CPU性能分析</h2><h3 id="性能测量"><a href="#性能测量" class="headerlink" title="性能测量"></a>性能测量</h3><p>理解应用程序性能的第一步是学会对它进行测量，基准测试每次运行的结果都不尽相同，因为在性能测量中存在误差，性能分析通常需要通过统计方法进行处理。<br>设计性能测试和配置测试环境都是性能评估工作的重要组成部分。</p><h4 id="现代系统中的噪声"><a href="#现代系统中的噪声" class="headerlink" title="现代系统中的噪声"></a>现代系统中的噪声</h4><p>以动态频率调节（DFS）为例，它是一个在短时间内提升CPU频率让其运行速度明显加快的特性。但是，CPU不能长时间处于“超频”状态，稍后它会降低到基本值。DFS很大程度上由CPU核的温度决定，因此很难预测其对实验结果的影响。</p><p>经验：即使运行任务管理工具-例如TOP指令，也会影响测量结果，因为某些CPU核会被激活并分配给该工具的进程，这可能会影响运行实际基准测试程序的CPU核频率。</p><p>通过设置测试环境以确保低方差的基准测试结果的工具-temci:<a href="https://github.com/parttimenerd/temci">https://github.com/parttimenerd/temci</a></p><h4 id="手动性能测试"><a href="#手动性能测试" class="headerlink" title="手动性能测试"></a>手动性能测试</h4><p>正常提交变更代码时，我们需要确保性能没有退化，一般通过以下三步完成：<br>1、测量基线性能；<br>2、测量修改后程序的性能；<br>3、对两者进行比较；</p><h4 id="软件计时器和硬件计时器"><a href="#软件计时器和硬件计时器" class="headerlink" title="软件计时器和硬件计时器"></a>软件计时器和硬件计时器</h4><p>1、系统级高分辨率计时器：系统计时器，通过统计自某任意时间起开始流逝的滴答数而实现。在Linux操作系统下，可通过clock_gettime系统调用访问系统计时器；在C++语言中，标准的做法是使用std::chrono访问系统计时器。<br>2、时间戳计时器（TSC），这是一个通过硬件寄存器实现的硬件计时器。TSC也是单调递增的，并且以固定的速率增长，也就是说它与频率无关。TSC的值可以使用编译器的内置函数__rdtsc查询。</p><p>CppPerformanceBenchmarks：<a href="https://gitlab.com/chriscox/CppPerformanceBenchmarks">https://gitlab.com/chriscox/CppPerformanceBenchmarks</a> 介绍了不同平台下使用不同API调用计时器的性能比较。</p><h4 id="微基准测试"><a href="#微基准测试" class="headerlink" title="微基准测试"></a>微基准测试</h4><p>为了验证某些假设，可以编写一个独立的微基准测试程序。通常，微基准测试程序是在优化某些特定功能时跟踪优化进展的手段。几乎所有现代编程语言都有基准测试框架，比如对C++来说可以使用Google Benchmark库，<a href="https://github.com/google/benchmark%E3%80%82">https://github.com/google/benchmark。</a></p><p>写基准测试程序时，重要的是确保测试场景在微基准测试程序运行时执行。优化编译器可能会消除使实验变得无用的代码（编译器优化掉）。防止编译器优化重要代码的一种常用手段是，使用类似 DoNotoptimize的辅助函数，这些辅助函数可以在幕后完成必要的内联汇编优化。</p><p>检验这件事的方式：审视一下基准测试的性能剖析文件，看看关注的代码是否凸显微热点。</p><p>性能数据分布之间的统计可以通过假设检验方法来识别和发现。一旦确定性能差异在统计上是显著的，那么性能加速比可以通过算术平均或几何平均来计算。</p><h3 id="CPU微架构"><a href="#CPU微架构" class="headerlink" title="CPU微架构"></a>CPU微架构</h3>]]></content>
    
    
    <categories>
      
      <category>性能优化</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/05/03/hello-world/"/>
    <url>/2024/05/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>DAG</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2024/05/03/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2024/05/03/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="第一次测试"><a href="#第一次测试" class="headerlink" title="第一次测试"></a>第一次测试</h2><h2 id="第二次测试"><a href="#第二次测试" class="headerlink" title="第二次测试"></a>第二次测试</h2>]]></content>
    
    
    <categories>
      
      <category>C++20</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello GPU</title>
    <link href="/2024/05/03/GPU/GPU/"/>
    <url>/2024/05/03/GPU/GPU/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>GPU</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello C++</title>
    <link href="/2024/05/03/c++/c++/"/>
    <url>/2024/05/03/c++/c++/</url>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    std::cout &lt;&lt; <span class="hljs-string">&quot;hello world&quot;</span> &lt;&lt; std::endl;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="c-新特性"><a href="#c-新特性" class="headerlink" title="c++新特性"></a>c++新特性</h3>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
